const animations = {
  0: ["+-----------+", "||", "||", "||", "||", "||", "||", "||", "||", "||", "|-------------+", "+----------------+"],
  1: ["+-----------+", "||     |", "||", "||", "||", "||", "||", "||", "||", "||", "|-------------+", "+----------------+"],
  2: ["+-----------+", "||     |", "||     __", "||    (OO)", "||     =<", "||", "||", "||", "||", "||", "|-------------+", "+----------------+"],
  3: ["+------+----+", "||     |", "||     __", "||    (OO)", "||     =^", "||    +--+", "||    +--+", "||", "||", "||", "|-------------+", "+----------------+"],
  4: ["+------+----+", "||     |", "||     __", "||    (OO)", "||     =^", "|| <-------->", "||    +--+", "||", "||", "||", "|-------------+", "+----------------+"],
  5: ["+------+----+", "||     |", "||     __", "||    (OO)", "||     =^", "|| <-------->", "||    +--+", "||     ||", "||   <---->", "||", "|-------------+", "+----------------+"],
  6: ["+------+----+", "||     |  +----------+", "||     __ |  HELP!!  |", "||    (OO)+----------+", "||     =^", "|| <-------->", "||    +--+", "||     ||", "||   <---->", "||", "|-------------+", "+----------------+"],
  7: ["+------+----+", "||     |  +----------+", "||     __ |  NOOO!!  |", "||    (OO)+----------+", "||     =^", "|| <-------->", "||    +--+", "||     ||", "||   <---->", "||", "|-------------+", "+----------------+"],
  8: ["+------+----+", "||     |", "||     __", "||    (xx)", "||     -U", "|| <-------->", "||    +--+", "||     ||", "||   <---->", "||", "|-------------+", "+----------------+"],
};

const words = [
  "abruptly",
  "absurd",
  "abyss",
  "affix",
  "askew",
  "avenue",
  "awkward",
  "axiom",
  "bagpipes",
  "bandwagon",
  "banjo",
  "bayou",
  "beekeeper",
  "bikini",
  "boggle",
  "bookworm",
  "boxcar",
  "boxful",
  "buckaroo",
  "buffalo",
  "buffoon",
  "buxom",
  "caliph",
  "cobweb",
  "cockiness",
  "croquet",
  "crypt",
  "curacao",
  "cycle",
  "daiquiri",
  "dirndl",
  "disavow",
  "duplex",
  "dwarves",
  "equip",
  "espionage",
  "euouae",
  "exodus",
  "faking",
  "fishhook",
  "fixable",
  "fjord",
  "flapjack",
  "flopping",
  "fluffiness",
  "flyby",
  "foxglove",
  "fuchsia",
  "funny",
  "gabby",
  "galaxy",
  "giaour",
  "glowworm",
  "glyph",
  "gnarly",
  "gnostic",
  "gossip",
  "grogginess",
  "haiku",
  "hyphen",
  "iatrogenic",
  "icebox",
  "injury",
  "ivory",
  "ivy",
  "jackpot",
  "jaundice",
  "jawbreaker",
  "jaywalk",
  "jelly",
  "jigsaw",
  "jinx",
  "jiujitsu",
  "jockey",
  "jogging",
  "joking",
  "jovial",
  "joyful",
  "juicy",
  "jukebox",
  "jumbo",
  "kayak",
  "keyhole",
  "khaki",
  "kilobyte",
  "kiosk",
  "kitsch",
  "kiwifruit",
  "knapsack",
  "larynx",
  "lengths",
  "lucky",
  "luxury",
  "lymph",
  "marquis",
  "matrix",
  "microwave",
  "mnemonic",
  "mystify",
  "naphtha",
  "nightclub",
  "nowadays",
  "numbskull",
  "nymph",
  "onyx",
  "ovary",
  "oxygen",
  "pajama",
  "peekaboo",
  "phlegm",
  "pixel",
  "pneumonia",
  "polka",
  "pshaw",
  "psyche",
  "puppy",
  "queue",
  "quips",
  "quixotic",
  "quorum",
  "rhubarb",
  "rhythm",
  "rickshaw",
  "schnapps",
  "scratch",
  "shiv",
  "sphinx",
  "squawk",
  "staff",
  "strength",
  "strengths",
  "stretch",
  "stronghold",
  "stymied",
  "subway",
  "swivel",
  "syndrome",
  "thriftless",
  "thumbscrew",
  "transcript",
  "transgress",
  "transplant",
  "triphthong",
  "twelfth",
  "twelfths",
  "unknown",
  "unworthy",
  "uptown",
  "vixen",
  "vodka",
  "voodoo",
  "vortex",
  "voyeurism",
  "walkway",
  "wave",
  "wavy",
  "waxy",
  "wellspring",
  "whiskey",
  "whomever",
  "wimpy",
  "witchcraft",
  "wristwatch",
  "wyvern",
  "xylophone",
  "yachtsman",
  "yippee",
  "yoked",
  "youthful",
  "yummy",
];


const encodeToID = (text, salt = process.env.SECRET_SALT) => {
  const textToChars = (text) => text.split("").map((c) => c.charCodeAt(0));
  const byteHex = (n) => ("0" + Number(n).toString(16)).substr(-2);
  const applySaltToChar = (code) => textToChars(salt).reduce((a, b) => a ^ b, code);
  
  return text
    .split("")
    .map(textToChars)
    .map(applySaltToChar)
    .map(byteHex)
    .join("");
};

const decodeFromID = (text, salt = process.env.SECRET_SALT) => {
  const textToChars = (text) => text.split("").map((c) => c.charCodeAt(0));
  const applySaltToChar = (code) => textToChars(salt).reduce((a, b) => a ^ b, code);
  
  return text
    .match(/.{1,2}/g)
    .map((hex) => parseInt(hex, 16))
    .map(applySaltToChar)
    .map((charCode) => String.fromCharCode(charCode))
    .join("");
};

module.exports = {
  animations,
  words,
  encodeToID,
  decodeFromID,
};